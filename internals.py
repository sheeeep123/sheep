# -*- coding: utf-8 -*-
"""internals

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eqZBd0yIhGum_07gWz2PQpsAPnfbDlXZ
"""

#1(i)
statement="I am signing up for Replit's 100 days of Python challenge! I will make sure to spend some time every day coding along, for a minimum of 10 minutes a day. I'll be using Replit, an amazing online IDE so I can do this from my phone wherever I happend to be No excuses for not coding from the middle of a field!"
statement

#2
mobilecost=12300
gst="18%"
GSTamt=12300*18/100
print("the gst amount is:",GSTamt)
netamt=mobilecost+GSTamt
print("the net amount is:",netamt)

#5
def household():
  print("\nCalculating household Eb price")
  unit=int(input("\nNumber of Units used: "))

  if unit<100:
    price=unit*0.50
    print("Your Price : Rs.",price)
  elif unit>101 and unit<200:
    price=unit*0.75
    print("Your Price : Rs.",price)
  elif unit>201 and unit<300:
    price=unit*1.20
    print("Your Price : Rs.",price)
  else:
    price=unit*1.50
    print("Your Price : Rs.",price)

household()



i=0
while i<5:
  name=input('enter ur name')
  j=0
 
  while j<10:
    weight=int(input('enter ur weight'))
    if weight >= 50:
      credits=underweight
    elif:
      weight = 60
      credits=healthy
    else:
      weight <=70
      credits=overweight

    j+=1
 
  print(weight)
  i+=1

import pandas as pd
df=pd.DataFrame {
                  'offence':['sending threatning messages by email','sending defamatory messages by email','forgery or electronic records','bogus website cyber frauds','email spoofing','web jacking','email abuse','online sale of drugs','online sale of arms'],
                   'law':['sec 503 ipc','sec 499 IPC','sec 463 IPC','sec 420 ipc','sec 463 IPC','sec 383 IPC','sec 500 IPC','NDPS','arms act']}
print(df)

import pandas as pd
data = {
"name": ['ria', 'mecha', 'kendrick', 'kora', 'john', 'paul', 'dhia', 'sandy', 'ronny', 'sia'],
"date": [2005, 2002, 2002, 2010, 2000, 2009, 2010, 2012, 2013, 2015,],
"weigh": ['60kg', '70kg', '57kg', '65kg', '80kg', '56kg', '61kg', '65kg', '77kg', '40kg',],
"height": ['120cm', '100cm', '80cm', '60cm', '90cm', '80cm', '60cm', '130cm', '175cm', '165cm',]
}
df=pd.DataFrame(data)
df['age']=2022-df['date']
df['health status']=df['age'].apply (lambda X:'critical' if X>58 else 'normal')
print (df)